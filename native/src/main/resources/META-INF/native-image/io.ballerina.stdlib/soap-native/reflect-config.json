[
  {
    "name":"[B"
  },
  {
    "name":"[Lio.ballerina.runtime.api.types.ResourceMethodType;"
  },
  {
    "name":"[Lio.ballerina.runtime.internal.types.BMethodType;"
  },
  {
    "name":"[Ljava.lang.String;"
  },
  {
    "name":"[Lsun.security.pkcs.SignerInfo;"
  },
  {
    "name":"apple.security.AppleProvider",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ballerina.soap&0046soap11$test.1.$_init",
    "methods":[{"name":"$getTestExecutionState","parameterTypes":[] }, {"name":"main","parameterTypes":["java.lang.String[]"] }]
  },
  {
    "name":"ballerina.soap&0046soap12$test.1.$_init",
    "methods":[{"name":"$getTestExecutionState","parameterTypes":[] }, {"name":"main","parameterTypes":["java.lang.String[]"] }]
  },
  {
    "name":"ballerina.soap&0046wssec$test.1.$_init",
    "methods":[{"name":"$getTestExecutionState","parameterTypes":[] }, {"name":"main","parameterTypes":["java.lang.String[]"] }]
  },
  {
    "name":"com.aayushatharva.brotli4j.Brotli4jLoader"
  },
  {
    "name":"com.sun.crypto.provider.AESCipher$General",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.AESKeyGenerator",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA1",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA256",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.HmacSHA1",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.PBEParameters",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.PBES2Core$HmacSHA256AndAES_256",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.PBES2Parameters$General",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndDESede",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndRC2_40",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.RSACipher",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.DefaultHttpClientUpgradeHandler"
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.common.http2.Http2ExceptionHandler",
    "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.listener.CustomHttpContentCompressor"
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.listener.HttpServerChannelInitializer"
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.listener.http2.Http2SourceConnectionHandler",
    "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.listener.http2.Http2SourceHandler",
    "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.listener.http2.Http2ToHttpFallbackHandler",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.listener.http2.Http2WithPriorKnowledgeHandler",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.sender.HttpClientChannelInitializer",
    "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.sender.StatusLineAndHeaderLengthValidator",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.sender.TargetHandler",
    "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.ballerina.stdlib.http.transport.contractimpl.sender.http2.Http2TargetHandler",
    "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
  },
  {
    "name":"io.netty.bootstrap.ServerBootstrap$1"
  },
  {
    "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
  },
  {
    "name":"io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods":true
  },
  {
    "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields":[{"name":"refCnt"}]
  },
  {
    "name":"io.netty.channel.AbstractChannelHandlerContext",
    "fields":[{"name":"handlerState"}]
  },
  {
    "name":"io.netty.channel.ChannelDuplexHandler",
    "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
  },
  {
    "name":"io.netty.channel.ChannelInboundHandlerAdapter",
    "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.netty.channel.ChannelInitializer",
    "methods":[{"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
  },
  {
    "name":"io.netty.channel.ChannelOutboundBuffer",
    "fields":[{"name":"totalPendingSize"}, {"name":"unwritable"}]
  },
  {
    "name":"io.netty.channel.CombinedChannelDuplexHandler",
    "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
  },
  {
    "name":"io.netty.channel.DefaultChannelConfig",
    "fields":[{"name":"autoRead"}, {"name":"writeBufferWaterMark"}]
  },
  {
    "name":"io.netty.channel.DefaultChannelPipeline",
    "fields":[{"name":"estimatorHandle"}]
  },
  {
    "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
  },
  {
    "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.netty.channel.socket.nio.NioServerSocketChannel",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.netty.channel.socket.nio.NioSocketChannel",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.netty.handler.codec.ByteToMessageDecoder",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.netty.handler.codec.MessageAggregator",
    "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
  },
  {
    "name":"io.netty.handler.codec.MessageToMessageCodec",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
  },
  {
    "name":"io.netty.handler.codec.MessageToMessageDecoder",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.netty.handler.codec.http.HttpClientCodec"
  },
  {
    "name":"io.netty.handler.codec.http.HttpClientUpgradeHandler",
    "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
  },
  {
    "name":"io.netty.handler.codec.http.HttpContentDecoder",
    "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
  },
  {
    "name":"io.netty.handler.codec.http.HttpContentDecompressor"
  },
  {
    "name":"io.netty.handler.codec.http.HttpContentEncoder",
    "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
  },
  {
    "name":"io.netty.handler.codec.http.HttpServerCodec"
  },
  {
    "name":"io.netty.handler.codec.http.HttpServerUpgradeHandler"
  },
  {
    "name":"io.netty.handler.codec.http2.Http2ConnectionHandler",
    "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
  },
  {
    "name":"io.netty.handler.timeout.IdleStateHandler",
    "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
  },
  {
    "name":"io.netty.util.DefaultAttributeMap",
    "fields":[{"name":"attributes"}]
  },
  {
    "name":"io.netty.util.DefaultAttributeMap$DefaultAttribute",
    "fields":[{"name":"attributeMap"}]
  },
  {
    "name":"io.netty.util.Recycler$DefaultHandle",
    "fields":[{"name":"state"}]
  },
  {
    "name":"io.netty.util.ReferenceCountUtil",
    "queryAllDeclaredMethods":true
  },
  {
    "name":"io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
    "fields":[{"name":"droppedRecords"}, {"name":"head"}]
  },
  {
    "name":"io.netty.util.concurrent.DefaultPromise",
    "fields":[{"name":"result"}]
  },
  {
    "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
    "fields":[{"name":"state"}, {"name":"threadProperties"}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields":[{"name":"producerLimit"}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields":[{"name":"consumerIndex"}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields":[{"name":"producerIndex"}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields":[{"name":"consumerIndex"}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields":[{"name":"producerIndex"}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields":[{"name":"producerLimit"}]
  },
  {
    "name":"java.lang.Class",
    "methods":[{"name":"getRecordComponents","parameterTypes":[] }, {"name":"isRecord","parameterTypes":[] }]
  },
  {
    "name":"java.lang.ProcessHandle",
    "methods":[{"name":"current","parameterTypes":[] }, {"name":"pid","parameterTypes":[] }]
  },
  {
    "name":"java.lang.String"
  },
  {
    "name":"java.lang.Thread",
    "fields":[{"name":"threadLocalRandomProbe"}],
    "methods":[{"name":"getContextClassLoader","parameterTypes":[] }]
  },
  {
    "name":"java.lang.reflect.RecordComponent",
    "methods":[{"name":"getName","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }]
  },
  {
    "name":"java.nio.Bits",
    "fields":[{"name":"MAX_MEMORY"}, {"name":"UNALIGNED"}]
  },
  {
    "name":"java.nio.Buffer",
    "fields":[{"name":"address"}]
  },
  {
    "name":"java.nio.ByteBuffer",
    "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
  },
  {
    "name":"java.nio.DirectByteBuffer",
    "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
  },
  {
    "name":"java.nio.channels.spi.SelectorProvider",
    "methods":[{"name":"openServerSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }, {"name":"openSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }]
  },
  {
    "name":"java.security.AlgorithmParametersSpi"
  },
  {
    "name":"java.security.KeyStoreSpi"
  },
  {
    "name":"java.security.MessageDigestSpi"
  },
  {
    "name":"java.security.SecureRandomParameters"
  },
  {
    "name":"java.security.interfaces.DSAPrivateKey"
  },
  {
    "name":"java.security.interfaces.DSAPublicKey"
  },
  {
    "name":"java.security.interfaces.RSAPrivateKey"
  },
  {
    "name":"java.security.interfaces.RSAPublicKey"
  },
  {
    "name":"java.security.spec.DSAParameterSpec"
  },
  {
    "name":"java.sql.Date"
  },
  {
    "name":"java.util.Date"
  },
  {
    "name":"java.util.concurrent.atomic.AtomicBoolean",
    "fields":[{"name":"value"}]
  },
  {
    "name":"java.util.concurrent.atomic.AtomicReference",
    "fields":[{"name":"value"}]
  },
  {
    "name":"java.util.concurrent.atomic.Striped64",
    "fields":[{"name":"base"}, {"name":"cellsBusy"}]
  },
  {
    "name":"javax.security.auth.x500.X500Principal",
    "fields":[{"name":"thisX500Name"}],
    "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
  },
  {
    "name":"jdk.internal.misc.Unsafe",
    "methods":[{"name":"getUnsafe","parameterTypes":[] }]
  },
  {
    "name":"org.apache.axiom.locator.DefaultOMMetaFactoryLocator",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.axiom.om.impl.llom.factory.AxiomNodeFactoryImpl",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"org.apache.axiom.om.impl.llom.factory.OMLinkedListMetaFactoryLoader",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.commons.logging.LogFactory"
  },
  {
    "name":"org.apache.commons.logging.impl.Jdk14Logger",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"setLogFactory","parameterTypes":["org.apache.commons.logging.LogFactory"] }]
  },
  {
    "name":"org.apache.commons.logging.impl.Log4JLogger"
  },
  {
    "name":"org.apache.commons.logging.impl.LogFactoryImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.commons.logging.impl.WeakHashtable",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.commons.pool.impl.EvictionTimer"
  },
  {
    "name":"org.apache.wss4j.dom.processor.EncryptedKeyProcessor",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.wss4j.dom.processor.SignatureProcessor",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.wss4j.dom.processor.TimestampProcessor",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.wss4j.dom.processor.UsernameTokenProcessor",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.wss4j.dom.transform.AttachmentCiphertextTransform",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.wss4j.dom.validate.SignatureTrustValidator",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.wss4j.dom.validate.TimestampValidator",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.wss4j.dom.validate.UsernameTokenValidator",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.xml.security.c14n.implementations.CanonicalizerPhysical",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.apache.xml.security.utils.XMLUtils",
    "fields":[{"name":"ignoreLineBreaks"}]
  },
  {
    "name":"org.ballerinalang.test.runtime.entity.Test",
    "allDeclaredFields":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.ballerinalang.test.runtime.entity.TestGroup",
    "allDeclaredFields":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.ballerinalang.test.runtime.entity.TestSuite",
    "allDeclaredFields":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.bouncycastle.asn1.x500.X500Name",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
  },
  {
    "name":"sun.misc.Unsafe",
    "fields":[{"name":"theUnsafe"}],
    "methods":[{"name":"allocateInstance","parameterTypes":["java.lang.Class"] }, {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"storeFence","parameterTypes":[] }]
  },
  {
    "name":"sun.nio.ch.SelectorImpl",
    "fields":[{"name":"publicSelectedKeys"}, {"name":"selectedKeys"}]
  },
  {
    "name":"sun.security.pkcs12.PKCS12KeyStore",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.DSA$SHA256withDSA",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.DSAKeyFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.DSAParameters",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.NativePRNG",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
  },
  {
    "name":"sun.security.provider.SHA",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.SHA2$SHA256",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.SHA5$SHA512",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.X509Factory",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.rsa.RSAKeyFactory$Legacy",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.rsa.RSASignature$SHA1withRSA",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.rsa.RSASignature$SHA256withRSA",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.rsa.RSASignature$SHA512withRSA",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.util.ObjectIdentifier"
  },
  {
    "name":"sun.security.x509.AuthorityInfoAccessExtension",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
  },
  {
    "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
  },
  {
    "name":"sun.security.x509.BasicConstraintsExtension",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
  },
  {
    "name":"sun.security.x509.CRLDistributionPointsExtension",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
  },
  {
    "name":"sun.security.x509.CertificateExtensions"
  },
  {
    "name":"sun.security.x509.CertificatePoliciesExtension",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
  },
  {
    "name":"sun.security.x509.ExtendedKeyUsageExtension",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
  },
  {
    "name":"sun.security.x509.KeyUsageExtension",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
  },
  {
    "name":"sun.security.x509.SubjectKeyIdentifierExtension",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
  }
  ]
  